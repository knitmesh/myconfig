# example: /usr/share/doc/tmux/examples/
# {{{ screen-keys.conf
# $Id: screen-keys.conf,v 1.7 2010/07/31 11:39:13 nicm Exp $
#
# By Nicholas Marriott. Public domain.
#
# This configuration file binds many of the common GNU screen key bindings to
# appropriate tmux key bindings. Note that for some key bindings there is no
# tmux analogue and also that this set omits binding some commands available in
# tmux but not in screen.
#
# Note this is only a selection of key bindings and they are in addition to the
# normal tmux key bindings. This is intended as an example not as to be used
# as-is.

# Set the prefix to ^A.
unbind C-b
set -g prefix ^A
bind a send-prefix

# screen ^C c
unbind ^C
bind ^C new-window
# bind c
bind c new-window

# detach ^D d
unbind ^D
bind ^D detach

# displays *
unbind *
bind * list-clients

# next ^@ ^N sp n
unbind ^@
bind ^@ next-window
unbind ^N
bind ^N next-window
unbind " "
bind " " next-window
unbind n
bind n next-window

# title A
unbind A
bind A command-prompt "rename-window %%"

# other ^A
unbind ^A
bind ^A last-window

# prev ^H ^P p ^?
unbind ^H
bind ^H previous-window
unbind ^P
bind ^P previous-window
unbind p
bind p previous-window
unbind BSpace
bind BSpace previous-window

# windows ^W w
unbind ^W
bind ^W list-windows
unbind w
bind w list-windows

# quit \
unbind \
bind \ confirm-before "kill-server"

# kill K k
unbind K
bind K confirm-before "kill-window"
unbind k
bind k confirm-before "kill-window"

# redisplay ^L l
unbind ^L
bind ^L refresh-client
unbind l
bind l refresh-client

# split -v |
unbind |
bind | split-window

# :kB: focus up
unbind Tab
bind Tab select-pane -t:.+
unbind BTab
bind BTab select-pane -t:.-

# " windowlist -b
unbind '"'
bind '"' choose-window

# split windows like vim
# vim's definition of a horizontal/vertical split is reversed from tmux's
# bind s split-window -v
# bind v split-window -h

# move around panes with hjkl, as one would in vim after pressing ctrl-w
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# resize panes like vim
# feel free to change the "1" to however many lines you want to resize by, only
# one at a time can be slow
bind < resize-pane -L 1
bind > resize-pane -R 1
bind - resize-pane -D 1
bind + resize-pane -U 1

# bind : to command-prompt like vim
# this is the default in tmux already
bind : command-prompt

# vi-style controls for copy mode
setw -g mode-keys vi

# Easy config reload
bind-key r source-file ~/.tmux.conf \; display-message "tmux.conf reloaded"

# Setting the delay between prefix and command.
set -sg escape-time 1

# Set the base index for windows to 1 instead of 0.
set -g base-index 1

# Set the base index for panes to 1 instead of 0.
setw -g pane-base-index 1

# 新Pane保持原来的目录，而不是跳转到HOME目录
bind v split-window -h -c '#{pane_current_path}'
bind s split-window -v -c '#{pane_current_path}'


# 开始鼠标模式
set-option -g mouse on

# UI配置
# 面板分割栏颜色
set -g pane-border-fg green

# 消息栏字体使用UTF-8编码
# set -g status-utf8 on

# 消息刷新时间为60s
set -g status-interval 60

# 窗口列表居中
set -g status-justify left

# 当其它Pane有消息的时候突出显示
setw -g monitor-activity on
set -g visual-activity on

# 状态栏颜色
#set -g status-bg black
set -g status-bg colour238
set -g status-fg white

# 左下角
#set -g status-left "#[fg=cyan,bold]  #S < " # session-name
set -g status-left-length 15
set -g status-left '#[fg=colour245,bg=colour238 bold] ❐ #[fg=colour245,bg=colour238 bold]#S #[fg=colour245,bg=colour238]⮀ '
setw -g automatic-rename on
set-window-option -g window-status-format '#[fg=colour245,bg=colour238,nobold]#I:#[fg=colour245,bg=colour238,bold]#W'
set-window-option -g window-status-current-format '#[fg=white,bold]#I#[fg=white]:#[fg=white]#W#[dim]'

# 右下角
# set -g status-right '#[fg=green][#[fg=cyan]%Y-%m-%d#[fg=green]]'
set -g status-right "#[fg=colour245,bg=colour238 bold]"

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

# session continuum start 
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @resurrect-processes 'ssh mysql redis-server npm'
# 鼠标插件
# set -g @plugin 'nhdaly/tmux-better-mouse-mode'

# set auto save session time
set -g @continuum-save-interval '10'

set -g @plugin 'tmux-plugins/tmux-pain-control'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

